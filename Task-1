#This code carries EDA on the Titanic data set using pandas, numpy, matplotlib, and seaborn. It loads the dataset, checks for missing values, and visualizes numerical features like age and fare using histograms. Survival across categorical features, for instance, sex, class, embarked, is further interrogated with count plots in the code. It calculates and displays correlations of numerical features using a heatmap and makes use of a boxplot to find outliers. Finally, in order to visualize the relationship between survival and other features, it constructs a pairplot.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
data = sns.load_dataset('titanic')
print("Dataset Information:")
print(data.info())
print("\nMissing Values:")
print(data.isnull().sum())
plt.figure(figsize=(10, 6))
sns.heatmap(data.isnull(), cbar=False, cmap='viridis')
plt.title("Missing Data Heatmap")
plt.show()
print("\nStatistical Summary:")
print(data.describe(include='all'))
numerical_features = ['age', 'fare']
for feature in numerical_features:
    plt.figure(figsize=(6, 4))
    sns.histplot(data[feature], kde=True, bins=20, color='green')
    plt.title(f"Distribution of {feature}")
    plt.xlabel(feature.capitalize())
    plt.ylabel("Frequency")
    plt.show()
categorical_features = ['sex', 'class', 'embarked']
for feature in categorical_features:
    plt.figure(figsize=(6, 4))
    sns.countplot(data=data, x=feature, hue='survived', palette='coolwarm')
    plt.title(f"Survival Count by {feature.capitalize()}")
    plt.xlabel(feature.capitalize())
    plt.ylabel("Count")
    plt.legend(title='Survived', loc='upper right')
    plt.show()
plt.figure(figsize=(8, 6))
correlation_matrix = data[['age', 'fare', 'pclass', 'survived']].corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()
for feature in numerical_features:
    plt.figure(figsize=(6, 4))
    sns.boxplot(x='survived', y=feature, data=data, palette='Set3')
    plt.title(f"Boxplot of {feature} by Survival Status")
    plt.show()
plt.figure(figsize=(10, 8))
sns.pairplot(data, vars=['age', 'fare'], hue='survived', palette='coolwarm')
plt.title('Pairplot of Numerical Features by Survival Status')
plt.show()
